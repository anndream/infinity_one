- item = @changeset.data
- defer = Application.get_env :infinity_one, :defer, true
- import OneChatWeb.Admin.Page.ChatGeneral, only: [options: 1]
section.page-container.page-home.page-static.page-settings.admin-settings
  header.fixed-title.border-component-color
    = render OneChatWeb.MasterView, "burger.html"
    h2
      span.room-title= ~g"Chat General"
    .submit
      button.button.primary.save(disabled="true")
        i.icon-send
        span= ~g"Save changes"
  = if not has_permission? @user, "view-general-administration" do
    .content(style="padding-left: 40px;")
      p = unauthorized_message()
  - else
    .content.background-transparent-dark
      = form_for @changeset, "#", [id: "admin-general-form", "data-id": "chat_general"], fn f ->
        = hidden_input f, :id, value: item.id
        .rocket-form
          .section
            .section-content.border-component-color
              = select_line f, item, :unread_count, options(:unread_count), ~g(Unread Count), changed: @changed
              = select_line f, item, :unread_count_dm, options(:unread_count_dm), ~g(Unread Count for Direct Messages), changed: @changed
              = text_input_line f, item, :first_channel_after_login, ~g(First channel after login), disabled: "disabled", changed: @changed
              = unless defer do
                = radio_button_line(f, item, :enable_favorite_rooms, ~g"Enable Favorite Rooms", changed: @changed)
          = render "message_replacement_patterns.html", f: f, item: item, field: :message_replacement_patterns, title: ~g"Message Replacement Patterns", changed: @changed
          = collapsable_section ~g"Notifications", fn _ ->
            - desc = ~g(Can be any custom sound or the default ones: beep, chelle, ding, droplet, highbell, seasons)
            = text_input_line f, item, :default_message_notification_audio, ~g"Default message notification audio", description: desc, changed: @changed
            = select_line f, item, :audio_notifications_default_alert, options(:notifications), ~g(Audio Notifications Default Alert), changed: @changed
            = select_line f, item, :desktop_notifications_default_alert, options(:notifications), ~g(Desktop Notifications Default Alert), changed: @changed
            = select_line f, item, :mobile_notifications_default_alert, options(:notifications), ~g(Mobile Notifications Default Alert), changed: @changed
            - msg = ~g(Max room members before disabling all message notifications)
            - desc = ~g"Max number of members in room when notifications for all messages gets disabled. Users can still change per room setting to receive all notifications on an individual basis. (0 to disable)"
            = text_input_line f, item, :max_members_disable_notifications, msg, type: :number, description: desc, changed: @changed

          = render "slash_commands.html", f: f, item: item, field: :rooms_slash_commands, title: ~g"Slash Commands (Rooms Mode)", changed: @changed
          = render "slash_commands.html", f: f, item: item, field: :chat_slash_commands, title: ~g"Slash Commands (Chat Mode)", changed: @changed
